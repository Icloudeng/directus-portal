---
# tasks file for tools/ansible/roles/nginx
- name: Nginx | Ubuntu ppa
  when: ansible_distribution == 'Ubuntu'
  apt_repository:
    repo: ppa:nginx/stable
    state: present

- name: Nginx | GPG Key
  when: ansible_distribution == 'Debian'
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key

- name: Nginx | Debian repository
  when: ansible_distribution == 'Debian'
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - deb https://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx
    - deb-src https://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx

- name: Nginx | Install
  apt:
    name: nginx
    state: present

- name: Nginx | Create folder /etc/nginx/sites-enabled
  file:
    path: /etc/nginx/sites-enabled
    state: directory

- name: Nginx | Create folder /etc/nginx/sites-available
  file:
    path: /etc/nginx/sites-available
    state: directory

- name: Nginx | Default vhost
  template:
    src: default.j2
    dest: "/etc/nginx/sites-available/default"
    force: yes

- name: Nginx | Create /etc/nginx/nginxconfig.io
  file: state=directory path=/etc/nginx/nginxconfig.io

- name: Nginx | nginx.conf
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nginx/{{ item }}"
  loop:
    - nginx.conf
    - nginxconfig.io/general.conf
    - nginxconfig.io/letsencrypt.conf
    - nginxconfig.io/security.conf
    - nginxconfig.io/documentation.conf
  notify: nginx reload

- name: "Nginx | Vhost {{ domain }}"
  template:
    src: vhost.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"
  notify: nginx reload

- include_tasks: certificates.yml

- name: "Nginx | Vhost {{ domain }}"
  file:
    path: "/etc/nginx/sites-enabled/{{ domain }}"
    src: "/etc/nginx/sites-available/{{ domain }}"
    state: link
  notify: nginx reload

- include_tasks: letsencrypt.yml
  when: letsencrypt
  loop:
    - "{{ domain }}"
    - "{{ cms_domain }}"
  loop_control:
    loop_var: domain_item

- name: CRON | Certbot new
  cron:
    name: certbot renew
    special_time: daily
    job: "/usr/bin/certbot renew  --quiet"
  when: letsencrypt

- name: LetsEncrypt | Reload nginx on renewal
  copy:
    content: "#!/bin/bash\nnginx -t && systemctl reload nginx"
    dest: /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
    mode: 0755
  when: letsencrypt

# NGINX Custom
- name: "Nginx | Vhost {{ domain }}"
  template:
    src: vhost.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"
  when: letsencrypt
  notify: nginx reload

- name: "Nginx | NginxReqLimit fail2ban filter"
  template:
    src: fail2ban/nginx-req-limit.conf.j2
    dest: /etc/fail2ban/filter.d/nginx-req-limit.conf
    force: yes

- name: "Nginx | fail2ban Jail"
  template:
    src: fail2ban/jail.local.j2
    dest: /etc/fail2ban/jail.local
  notify: fail2ban restart
