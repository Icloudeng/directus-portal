- name: App CMS | Copy Sample .env.sample to .env
  become: false
  ansible.builtin.copy:
    src: "{{ root_path }}/apps/cms/.env.sample"
    dest: "{{ root_path }}/apps/cms/.env"
    force: yes
    remote_src: yes

- name: App CMS .env config
  set_fact:
    env_file: "{{ root_path }}/apps/cms/.env"

- name: Fact | Line Regex
  set_fact:
    lr: "^(#\\s+?)?"

- name: Create a upload directory if it does not exist
  ansible.builtin.file:
    path: "{{ root_path }}/apps/cms/uploads"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

# --------------------------- General variable ------------------------
- name: App CMS .env config | PUBLIC_URL (letsencrypt == true)
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^PUBLIC_URL="
    line: 'PUBLIC_URL="https://{{ cms_domain }}/"'
  when: letsencrypt == true

- name: App CMS .env config | PUBLIC_URL (letsencrypt == false)
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^PUBLIC_URL="
    line: 'PUBLIC_URL="http://{{ cms_domain }}/"'
  when: letsencrypt == false

# ---------------------------- Admin account ----------------------------
- name: App CMS .env config | ADMIN_EMAIL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^ADMIN_EMAIL="
    line: "ADMIN_EMAIL={{ portaladmin_email }}"

- name: App CMS .env config | ADMIN_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^ADMIN_PASSWORD="
    line: "ADMIN_PASSWORD={{ portaladmin_password }}"

# ----------------------------- App user account -----------------------------
- name: App CMS .env config | APP_USER_EMAIL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_EMAIL="
    line: "APP_USER_EMAIL={{ appuser_email }}"

- name: App CMS .env config | APP_USER_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_PASSWORD="
    line: "APP_USER_PASSWORD={{ portaladmin_password }}"

- name: App CMS .env config | APP_USER_TOKEN
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_TOKEN="
    line: "APP_USER_TOKEN={{ app_user_token }}"
#
# -------------------------------- Database config -------------------------------
#
- name: App CMS .env config | DB_DATABASE
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_DATABASE="
    line: "DB_DATABASE={{ database }}"
  when: not docker_install

- name: App CMS .env config | DB_USER
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_USER="
    line: "DB_USER={{ database }}"
  when: not docker_install

- name: App CMS .env config | DB_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_PASSWORD="
    line: "DB_PASSWORD={{ database_password }}"
  when: not docker_install
#
# -------------------------------- Rate Limiter -------------------------------
# - name: App CMS .env config | RATE_LIMITER_ENABLED
#   lineinfile:
#     path: "{{ env_file }}"
#     regexp: "{{ lr }}RATE_LIMITER_ENABLED="
#     line: "RATE_LIMITER_ENABLED=true"

# ----------------------- Cors configs --------------------------------------

# - name: App CMS .env config | CORS_ORIGIN
#   lineinfile:
#     path: "{{ env_file }}"
#     regexp: "{{ lr }}CORS_ORIGIN="
#     line: 'CORS_ORIGIN=true'

# ----------------------- LDAP configs --------------------------------------
- name: App CMS .env config
  set_fact:
    auth_ldap_role_id: "AUTH_LDAP_DEFAULT_ROLE_ID__{{ inventory_hostname | upper }}"

- name: App CMS .env config | AUTH_PROVIDERS
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^AUTH_PROVIDERS="
    line: "AUTH_PROVIDERS=ldap"
  when: cms_ldap_authentication

- name: App CMS .env config | Disable LDAP AUTH_PROVIDERS
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^AUTH_PROVIDERS="
    line: 'AUTH_PROVIDERS=""'
  when: not cms_ldap_authentication

- name: App CMS .env config | AUTH_LDAP_BIND_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^AUTH_LDAP_BIND_PASSWORD="
    line: "AUTH_LDAP_BIND_PASSWORD={{ ldap_user_bind_password }}"
  when: cms_ldap_authentication

- name: App CMS .env config | AUTH_LDAP_CLIENT_URL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^AUTH_LDAP_CLIENT_URL="
    line: 'AUTH_LDAP_CLIENT_URL="ldap://{{ ldap_client_url }}"'
  when: cms_ldap_authentication

- name: "App CMS .env config | {{ auth_ldap_role_id }} -> AUTH_LDAP_DEFAULT_ROLE_ID"
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}AUTH_LDAP_DEFAULT_ROLE_ID="
    line: AUTH_LDAP_DEFAULT_ROLE_ID="{{ lookup('env', auth_ldap_role_id) }}"
  when: cms_ldap_authentication and lookup('env', auth_ldap_role_id)

# ----------------------- EMAIL configs --------------------------------------

- name: App CMS .env config | SMTP EMAIL_TRANSPORT
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^EMAIL_TRANSPORT="
    line: "EMAIL_TRANSPORT=smtp"
  when: mailer

- name: App CMS .env config | Disable SMTP EMAIL_TRANSPORT
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^EMAIL_TRANSPORT="
    line: "EMAIL_TRANSPORT=sendmail"
  when: not mailer

- name: App CMS .env config | EMAIL_FROM
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^EMAIL_FROM="
    line: "EMAIL_FROM={{ mailer_from }}"
  when: mailer

- name: App CMS .env config  | EMAIL_* Configs
  blockinfile:
    path: "{{ env_file }}"
    insertbefore: (^EMAIL_FROM.*)
    block: |
      EMAIL_SMTP_HOST="{{ mailer_host }}"
      EMAIL_SMTP_POOL=true
      EMAIL_SMTP_PORT={{ mailer_port }}
      EMAIL_SMTP_SECURE=false
      EMAIL_SMTP_IGNORE_TLS=false
      EMAIL_SMTP_USER="{{ mailer_user }}"
      EMAIL_SMTP_PASSWORD="{{ mailer_password }}"
    state: present
  when: mailer
