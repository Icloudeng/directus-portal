- name: App CMS | Copy Sample .env.sample to .env
  become: false
  ansible.builtin.copy:
    src: "{{ root_path }}/apps/cms/.env.sample"
    dest: "{{ root_path }}/apps/cms/.env"
    force: yes
    remote_src: yes

- name: App CMS .env config
  set_fact:
    env_file: "{{ root_path }}/apps/cms/.env"

- name: Fact | Line Regex
  set_fact:
    lr: "^(#\\s+?)?"

# --------------------------- General variable ------------------------
- name: App CMS .env config | PUBLIC_URL (letsencrypt == true)
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^PUBLIC_URL="
    line: 'PUBLIC_URL="https://{{ cms_domain }}/"'
  when: letsencrypt == true

- name: App CMS .env config | PUBLIC_URL (letsencrypt == false)
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^PUBLIC_URL="
    line: 'PUBLIC_URL="http://{{ cms_domain }}/"'
  when: letsencrypt == false

# ---------------------------- Admin account ----------------------------
- name: App CMS .env config | ADMIN_EMAIL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^ADMIN_EMAIL="
    line: "ADMIN_EMAIL={{ portaladmin_email }}"

- name: App CMS .env config | ADMIN_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^ADMIN_PASSWORD="
    line: "ADMIN_PASSWORD={{ portaladmin_password }}"

# ----------------------------- App user account -----------------------------
- name: App CMS .env config | APP_USER_EMAIL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_EMAIL="
    line: "APP_USER_EMAIL={{ appuser_email }}"

- name: App CMS .env config | APP_USER_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_PASSWORD="
    line: "APP_USER_PASSWORD={{ portaladmin_password }}"

- name: App CMS .env config | APP_USER_TOKEN
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^APP_USER_TOKEN="
    line: "APP_USER_TOKEN={{ app_user_token }}"

# -------------------------------- Database config -------------------------------
- name: App CMS .env config | DB_DATABASE
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_DATABASE="
    line: "DB_DATABASE={{ database }}"

- name: App CMS .env config | DB_USER
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_USER="
    line: "DB_USER={{ database }}"

- name: App CMS .env config | DB_PASSWORD
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DB_PASSWORD="
    line: "DB_PASSWORD={{ database_password }}"

# -------------------------------- Cache config -------------------------------
- name: App CMS .env config | CACHE_ENABLED
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}CACHE_ENABLED="
    line: "CACHE_ENABLED=true"

- name: App CMS .env config | CACHE_STORE
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}CACHE_STORE="
    line: "CACHE_STORE=redis"

- name: App CMS .env config | CACHE_REDIS
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}CACHE_REDIS="
    line: 'CACHE_REDIS="redis://@127.0.0.1:6379"'

# -------------------------------- Rate Limiter -------------------------------
- name: App CMS .env config | RATE_LIMITER_ENABLED
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}RATE_LIMITER_ENABLED="
    line: "RATE_LIMITER_ENABLED=true"

- name: App CMS .env config | RATE_LIMITER_STORE
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}RATE_LIMITER_STORE="
    line: "RATE_LIMITER_STORE=redis"

- name: App CMS .env config | RATE_LIMITER_REDIS
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}RATE_LIMITER_REDIS="
    line: 'RATE_LIMITER_REDIS="redis://@127.0.0.1:6379"'

# ----------------------- Cors configs ------------------
- name: App CMS .env config | CORS_ENABLED
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}CORS_ENABLED="
    line: "CORS_ENABLED=false"

# - name: App CMS .env config | CORS_ORIGIN
#   lineinfile:
#     path: "{{ env_file }}"
#     regexp: "{{ lr }}CORS_ORIGIN="
#     line: 'CORS_ORIGIN="http://localhost, http://127.0.0.1, https://{{ cms_domain }}, https://{{ domain }}"'

# ----------------------- MESSENGER ------------------
- name: App CMS .env config | MESSENGER_STORE
  lineinfile:
    path: "{{ env_file }}"
    regexp: "{{ lr }}MESSENGER_STORE="
    line: "MESSENGER_STORE=redis"
