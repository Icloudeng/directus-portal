- name: DOCS Generator (Fact) | docs_gen_dir
  set_fact:
    docs_gen_dir: "{{ root_path }}/tools/docs-generator"

- name: DOCS Generator (Fact) | docs_gen_dir
  set_fact:
    env_file: "{{ docs_gen_dir }}/.env"

- name: DOCS Generator | PM2 Name
  set_fact:
    pm2_name: "{{ docs_pm2_name }}-generator"

- name: DOCS Generator | .env config | WEBSITE_URL (letsencrypt == true)
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^WEBSITE_URL="
    line: 'WEBSITE_URL="https://{{ domain }}/"'

- name: DOCS Generator | .env config | DIRECTUS_STATIC_TOKEN
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DIRECTUS_STATIC_TOKEN="
    line: "DIRECTUS_STATIC_TOKEN={{ app_user_token }}"

- name: DOCS Generator | .env config DIRECTUS_HOST
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DIRECTUS_HOST="
    line: "DIRECTUS_HOST=http://{{ cms_host }}"

- name: DOCS Generator | .env config DIRECTUS_URL
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DIRECTUS_URL="
    line: "DIRECTUS_URL=https://{{ cms_domain }}"

- name: "DOCS Generator (docs app) | .env config DOCS_APP_PM2_NAME | PM2 name ({{ docs_pm2_name }}) "
  lineinfile:
    path: "{{ env_file }}"
    regexp: "^DOCS_APP_PM2_NAME="
    line: "DOCS_APP_PM2_NAME={{ docs_pm2_name }}"

- name: DOCS Generator | Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5

- name: DOCS Generator | Recursively remove dist directory
  become: false
  command: "rm -rf dist/"
  args:
    chdir: "{{ docs_gen_dir }}"
  ignore_errors: true

- name: DOCS Generator | Generate all documentation from CMS
  become: false
  command: pnpm run generate
  args:
    chdir: "{{ docs_gen_dir }}"

- name: DOCS Generator | Delete old pm2 process
  command: "pm2 delete {{ pm2_name }}"
  args:
    chdir: "{{ docs_gen_dir }}"
  ignore_errors: true

- name: DOCS Generator | Start the server
  command: "pm2 start npm --name {{ pm2_name }} -- run start"
  args:
    chdir: "{{ docs_gen_dir }}"

- name: "DOCS Generator | CRON | PM2 {{ pm2_name }} restart"
  cron:
    name: "pm2-restart-{{ pm2_name }}"
    special_time: daily
    job: "pm2 restart {{ pm2_name }}"
